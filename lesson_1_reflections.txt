How did viewing a diff between two versions of a file help you see the bug that was introduced?

By seeing only the differences between the files it is easier to determine what changed and why it might cause a problem.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

By having a list of changes made it is easy to track the progression of the file over time. When something doesn't work out, it is easy to backtrack to an earlier working version.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

You may forget to commit a change causing the next change be too big.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

To keep changes made in inter-related grouped together for easy reference.


How can you use the commands git log and git diff to view the history of files?

The git log command will show the history of changes starting with the most recent change. The notes entered when committing the change will appear and the change ID. The git diff command will show the differences between two different commits. It can even span multiple files if the committs were to more than one file.


How might using version control make you more confident to make changes that could break something?

You can easily revert to a previous known working version.


Now that you have your workspace set up, what do you want to try using Git for?

To track changes in code.


