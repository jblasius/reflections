What happens when you initialize a repository? Why do you need to do it?
the system creates the .git directory to store the metadata.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area contains the files ready to be committed. The working directory has untracked files. Once the staging area is ready to be committed it will be added to the repository.

How can you use the staging area to make sure you have one commit per logical change?
By performing a git diff --staged you can ensure hte changes listed are grouped logically.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
To allow you to add an experimental feature. You can then later merge the changes back in. Also to keep the main program operational while significant changes are made.

How do the diagrams help you visualize the branch structure?
By showing where branches originated.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
To include the features present in both branches. The new commit has a parent relation to the tips of both branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pro: Readily obvious changes are done for you. Con: User intervention may be needed to resolve conflicts.

